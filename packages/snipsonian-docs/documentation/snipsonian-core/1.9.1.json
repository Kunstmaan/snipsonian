{
    "title": "snipsonian-core",
    "version": "1.9.1",
    "slug": "/snipsonian-core/1.9.1",
    "description": "Common utilities for JS primitives, URLs, filenames, ...",
    "documentation": [
        {
            "name": "assert",
            "path": "packages/snipsonian-core/src/assert",
            "slug": "/snipsonian-core/1.9.1/assert",
            "type": "folder",
            "children": [
                {
                    "name": "index.ts",
                    "path": "packages/snipsonian-core/src/assert/index.ts",
                    "slug": "/snipsonian-core/1.9.1/assert/index.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function assert(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    val: any,\n    validator: TValidator,\n    errorMessage: string = 'Assertion error for value \\'{val}\\'.',\n): void",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "builder",
            "path": "packages/snipsonian-core/src/builder",
            "slug": "/snipsonian-core/1.9.1/builder",
            "type": "folder",
            "children": [
                {
                    "name": "buildIfBuilder.ts",
                    "path": "packages/snipsonian-core/src/builder/buildIfBuilder.ts",
                    "slug": "/snipsonian-core/1.9.1/builder/buildIfBuilder.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function buildIfBuilder(entity: any): any",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "decorate",
            "path": "packages/snipsonian-core/src/decorate",
            "slug": "/snipsonian-core/1.9.1/decorate",
            "type": "folder",
            "children": [
                {
                    "name": "decorators",
                    "path": "packages/snipsonian-core/src/decorate/decorators",
                    "slug": "/snipsonian-core/1.9.1/decorate/decorators",
                    "type": "folder",
                    "children": [
                        {
                            "name": "addProp.ts",
                            "path": "packages/snipsonian-core/src/decorate/decorators/addProp.ts",
                            "slug": "/snipsonian-core/1.9.1/decorate/decorators/addProp.ts",
                            "type": "file",
                            "fileInfo": {
                                "defaultExport": "export default function addProp(\n    propName: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    propValue: any,\n    { addIfValueUnset = true }: IAddPropOptions = {},\n): TDecorator",
                                "description": null,
                                "example": null
                            }
                        },
                        {
                            "name": "builder.ts",
                            "path": "packages/snipsonian-core/src/decorate/decorators/builder.ts",
                            "slug": "/snipsonian-core/1.9.1/decorate/decorators/builder.ts",
                            "type": "file",
                            "fileInfo": {
                                "defaultExport": "export default function builder({\n    initialBuildParams = {},\n    buildStateName = '_builder',\n}: IBuilderOptions = {}): TDecorator",
                                "description": null,
                                "example": null
                            }
                        },
                        {
                            "name": "collapsable.ts",
                            "path": "packages/snipsonian-core/src/decorate/decorators/collapsable.ts",
                            "slug": "/snipsonian-core/1.9.1/decorate/decorators/collapsable.ts",
                            "type": "file",
                            "fileInfo": {
                                "defaultExport": "export default function collapsable({ initialIsCollapsed = false }: ICollapsableOptions = {}): TDecorator",
                                "description": null,
                                "example": null
                            }
                        }
                    ]
                },
                {
                    "name": "index.ts",
                    "path": "packages/snipsonian-core/src/decorate/index.ts",
                    "slug": "/snipsonian-core/1.9.1/decorate/index.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function decorate<Target = any>(target: Target): IDecorateTargetWith<Target>",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "error",
            "path": "packages/snipsonian-core/src/error",
            "slug": "/snipsonian-core/1.9.1/error",
            "type": "folder",
            "children": [
                {
                    "name": "conditionalCatch.ts",
                    "path": "packages/snipsonian-core/src/error/conditionalCatch.ts",
                    "slug": "/snipsonian-core/1.9.1/error/conditionalCatch.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function conditionalCatch({\n    actionToExecute,\n    onError,\n    shouldCatchErrors = false,\n}: IConditionalCatchInput): any",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "file",
            "path": "packages/snipsonian-core/src/file",
            "slug": "/snipsonian-core/1.9.1/file",
            "type": "folder",
            "children": [
                {
                    "name": "stripFileExtension.ts",
                    "path": "packages/snipsonian-core/src/file/stripFileExtension.ts",
                    "slug": "/snipsonian-core/1.9.1/file/stripFileExtension.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function stripFileExtension(fileName: string): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "supportWindowsPath.ts",
                    "path": "packages/snipsonian-core/src/file/supportWindowsPath.ts",
                    "slug": "/snipsonian-core/1.9.1/file/supportWindowsPath.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function supportWindowsPath(filePath: string): string",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "index.ts",
            "path": "packages/snipsonian-core/src/index.ts",
            "slug": "/snipsonian-core/1.9.1/index.ts",
            "type": "file",
            "fileInfo": {
                "defaultExport": null,
                "description": "Common utilities for JS primitives, URLs, filenames, ...",
                "example": null
            }
        },
        {
            "name": "is",
            "path": "packages/snipsonian-core/src/is",
            "slug": "/snipsonian-core/1.9.1/is",
            "type": "folder",
            "children": [
                {
                    "name": "index.ts",
                    "path": "packages/snipsonian-core/src/is/index.ts",
                    "slug": "/snipsonian-core/1.9.1/is/index.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isArray.ts",
                    "path": "packages/snipsonian-core/src/is/isArray.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isArray.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isArray(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isBoolean.ts",
                    "path": "packages/snipsonian-core/src/is/isBoolean.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isBoolean.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isBoolean(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isBuilder.ts",
                    "path": "packages/snipsonian-core/src/is/isBuilder.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isBuilder.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isBuilder(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isFunction.ts",
                    "path": "packages/snipsonian-core/src/is/isFunction.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isFunction.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isFunction(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isInteger.ts",
                    "path": "packages/snipsonian-core/src/is/isInteger.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isInteger.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isInteger(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isNull.ts",
                    "path": "packages/snipsonian-core/src/is/isNull.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isNull.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isNull(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isNumber.ts",
                    "path": "packages/snipsonian-core/src/is/isNumber.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isNumber.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isNumber(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isObject.ts",
                    "path": "packages/snipsonian-core/src/is/isObject.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isObject.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isObject(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isObjectPure.ts",
                    "path": "packages/snipsonian-core/src/is/isObjectPure.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isObjectPure.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isObjectPure(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isSet.ts",
                    "path": "packages/snipsonian-core/src/is/isSet.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isSet.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isSet(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isString.ts",
                    "path": "packages/snipsonian-core/src/is/isString.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isString.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isString(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isUndefined.ts",
                    "path": "packages/snipsonian-core/src/is/isUndefined.ts",
                    "slug": "/snipsonian-core/1.9.1/is/isUndefined.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isUndefined(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "merge",
            "path": "packages/snipsonian-core/src/merge",
            "slug": "/snipsonian-core/1.9.1/merge",
            "type": "folder",
            "children": [
                {
                    "name": "mergeObjectPropsDeeply.ts",
                    "path": "packages/snipsonian-core/src/merge/mergeObjectPropsDeeply.ts",
                    "slug": "/snipsonian-core/1.9.1/merge/mergeObjectPropsDeeply.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function mergeObjectPropsDeeply(...sources: object[]): object",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "monads",
            "path": "packages/snipsonian-core/src/monads",
            "slug": "/snipsonian-core/1.9.1/monads",
            "type": "folder",
            "children": [
                {
                    "name": "maybe.ts",
                    "path": "packages/snipsonian-core/src/monads/maybe.ts",
                    "slug": "/snipsonian-core/1.9.1/monads/maybe.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "object",
            "path": "packages/snipsonian-core/src/object",
            "slug": "/snipsonian-core/1.9.1/object",
            "type": "folder",
            "children": [
                {
                    "name": "cloneObjectDataProps.ts",
                    "path": "packages/snipsonian-core/src/object/cloneObjectDataProps.ts",
                    "slug": "/snipsonian-core/1.9.1/object/cloneObjectDataProps.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function cloneObjectDataProps(obj: object): object",
                        "description": "Does a deep clone of the input object, and thus returning a new object.\n * It only clones data/json properties, as in string, number, boolean, object, array properties.\n * So if the input object contains e.g. a function, the cloned object would not contain that property.",
                        "example": null
                    }
                },
                {
                    "name": "deletePropsFromObject.ts",
                    "path": "packages/snipsonian-core/src/object/deletePropsFromObject.ts",
                    "slug": "/snipsonian-core/1.9.1/object/deletePropsFromObject.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function deletePropsFromObject(obj: object): void",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isEmptyObject.ts",
                    "path": "packages/snipsonian-core/src/object/isEmptyObject.ts",
                    "slug": "/snipsonian-core/1.9.1/object/isEmptyObject.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isEmptyObject(obj: object): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isFalsyOrEmptyObject.ts",
                    "path": "packages/snipsonian-core/src/object/isFalsyOrEmptyObject.ts",
                    "slug": "/snipsonian-core/1.9.1/object/isFalsyOrEmptyObject.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "patterns",
            "path": "packages/snipsonian-core/src/patterns",
            "slug": "/snipsonian-core/1.9.1/patterns",
            "type": "folder",
            "children": [
                {
                    "name": "createObserverManager.ts",
                    "path": "packages/snipsonian-core/src/patterns/createObserverManager.ts",
                    "slug": "/snipsonian-core/1.9.1/patterns/createObserverManager.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function createObserverManager(): IObserverManager",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "string",
            "path": "packages/snipsonian-core/src/string",
            "slug": "/snipsonian-core/1.9.1/string",
            "type": "folder",
            "children": [
                {
                    "name": "getPartBetween.ts",
                    "path": "packages/snipsonian-core/src/string/getPartBetween.ts",
                    "slug": "/snipsonian-core/1.9.1/string/getPartBetween.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function getPartBetween({\n    firstPart,\n    secondPart,\n    input,\n}: {\n    firstPart: string;\n    secondPart: string;\n    input: string;\n}): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isEmptyString.ts",
                    "path": "packages/snipsonian-core/src/string/isEmptyString.ts",
                    "slug": "/snipsonian-core/1.9.1/string/isEmptyString.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isEmptyString(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "isSetString.ts",
                    "path": "packages/snipsonian-core/src/string/isSetString.ts",
                    "slug": "/snipsonian-core/1.9.1/string/isSetString.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function isSetString(val?: any): boolean",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "joinStringParts.ts",
                    "path": "packages/snipsonian-core/src/string/joinStringParts.ts",
                    "slug": "/snipsonian-core/1.9.1/string/joinStringParts.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function joinStringParts({\n    parts,\n    joinSeparator = ' ',\n}: {\n    parts: string[];\n    joinSeparator?: string;\n}): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "replacePlaceholders.ts",
                    "path": "packages/snipsonian-core/src/string/replacePlaceholders.ts",
                    "slug": "/snipsonian-core/1.9.1/string/replacePlaceholders.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function replacePlaceholders({ msg, placeholders = {} }: IReplacePlaceholdersInput): string",
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "test",
            "path": "packages/snipsonian-core/src/test",
            "slug": "/snipsonian-core/1.9.1/test",
            "type": "folder",
            "children": [
                {
                    "name": "simulateWaitTime.ts",
                    "path": "packages/snipsonian-core/src/test/simulateWaitTime.ts",
                    "slug": "/snipsonian-core/1.9.1/test/simulateWaitTime.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "time",
            "path": "packages/snipsonian-core/src/time",
            "slug": "/snipsonian-core/1.9.1/time",
            "type": "folder",
            "children": [
                {
                    "name": "periodsInMillis.ts",
                    "path": "packages/snipsonian-core/src/time/periodsInMillis.ts",
                    "slug": "/snipsonian-core/1.9.1/time/periodsInMillis.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "typings",
            "path": "packages/snipsonian-core/src/typings",
            "slug": "/snipsonian-core/1.9.1/typings",
            "type": "folder",
            "children": [
                {
                    "name": "apiErrors.ts",
                    "path": "packages/snipsonian-core/src/typings/apiErrors.ts",
                    "slug": "/snipsonian-core/1.9.1/typings/apiErrors.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "errorReporting.ts",
                    "path": "packages/snipsonian-core/src/typings/errorReporting.ts",
                    "slug": "/snipsonian-core/1.9.1/typings/errorReporting.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "logging.ts",
                    "path": "packages/snipsonian-core/src/typings/logging.ts",
                    "slug": "/snipsonian-core/1.9.1/typings/logging.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "patterns.ts",
                    "path": "packages/snipsonian-core/src/typings/patterns.ts",
                    "slug": "/snipsonian-core/1.9.1/typings/patterns.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        },
        {
            "name": "url",
            "path": "packages/snipsonian-core/src/url",
            "slug": "/snipsonian-core/1.9.1/url",
            "type": "folder",
            "children": [
                {
                    "name": "appendQueryParams.ts",
                    "path": "packages/snipsonian-core/src/url/appendQueryParams.ts",
                    "slug": "/snipsonian-core/1.9.1/url/appendQueryParams.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function appendQueryParams({\n    url,\n    params = {},\n}: {\n    url: string;\n    params?: IUrlParams;\n}): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "appendUrlParam.ts",
                    "path": "packages/snipsonian-core/src/url/appendUrlParam.ts",
                    "slug": "/snipsonian-core/1.9.1/url/appendUrlParam.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function appendUrlParam({\n    url,\n    paramName,\n    paramValue,\n}: IAppendUrlParamInput): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "appendUrlParamIfNotAlready.ts",
                    "path": "packages/snipsonian-core/src/url/appendUrlParamIfNotAlready.ts",
                    "slug": "/snipsonian-core/1.9.1/url/appendUrlParamIfNotAlready.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function appendUrlParamIfNotAlready({\n    url,\n    paramName,\n    paramValue,\n}: IAppendUrlParamInput): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "constructResourceUrl.ts",
                    "path": "packages/snipsonian-core/src/url/constructResourceUrl.ts",
                    "slug": "/snipsonian-core/1.9.1/url/constructResourceUrl.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function constructResourceUrl({\n    url,\n    baseUrl = '',\n    pathParams,\n    queryParams,\n}: {\n    url: string;\n    baseUrl?: string;\n    pathParams?: IUrlParams;\n    queryParams?: IUrlParams;\n}): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "getUrlPartBetween.ts",
                    "path": "packages/snipsonian-core/src/url/getUrlPartBetween.ts",
                    "slug": "/snipsonian-core/1.9.1/url/getUrlPartBetween.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function getUrlPartBetween({\n    url,\n    firstPart,\n    secondPart = '/',\n}: {\n    url: string;\n    firstPart: string;\n    secondPart?: string;\n}): string",
                        "description": null,
                        "example": null
                    }
                },
                {
                    "name": "replacePathParams.ts",
                    "path": "packages/snipsonian-core/src/url/replacePathParams.ts",
                    "slug": "/snipsonian-core/1.9.1/url/replacePathParams.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": "export default function replacePathParams({\n    url,\n    params = {},\n}: {\n    url: string;\n    params?: IUrlParams;\n}): string",
                        "description": null,
                        "example": "import replacePathParams from './replacePathParams';\n\nreplacePathParams({ url: 'http://some.domain.be/articles/{articleId}', params: { articleId: 1234 }});"
                    }
                },
                {
                    "name": "types.ts",
                    "path": "packages/snipsonian-core/src/url/types.ts",
                    "slug": "/snipsonian-core/1.9.1/url/types.ts",
                    "type": "file",
                    "fileInfo": {
                        "defaultExport": null,
                        "description": null,
                        "example": null
                    }
                }
            ]
        }
    ]
}